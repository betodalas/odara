#!/usr/bin/python3

# encoding=utf8
#################################################################################
#  Script     : bank_recon
#  Author     : Farhad Ali
#  Description: This script highlights matching transcations in an excel sheet
#               It requires two sheets to do so:-
#               (i).    usersheet - holds user records
#               (ii).   banksheet - holds records from bank reconciliation report
#################################################################################

##############################################################################
# imports required for the script to work
import openpyxl
from openpyxl.styles import NamedStyle, Font, Border, Side, PatternFill
import sys
import time
import os
import glob
import cgi
import html
from importlib import reload
import cgitb; cgitb.enable()     # for troubleshooting
import datetime

if sys.version[0] == '2':
    reload(sys)
    sys.setdefaultencoding("utf-8")

#sys.path.insert(0, "/var/www/cgi-bin/bank_recon.py")
os.chdir(".")       # bound path to the current directory

#satisfy openpyxl requirements for highlighting cells
highlight = NamedStyle(name="highlight")
highlight.font = Font(bold=True, size=12)
bd = Side(style='thick', color="000000")
highlight.border = Border(left=bd, top=bd, right=bd, bottom=bd)
highlight.fill = PatternFill(fill_type='lightUp',
                 start_color='fff000',
                end_color='6efdfd')

print("\n")
print("arquivos excel disponiveis nesta pasta:")
print("\n")

#enum files in current directory
files = os.listdir('/var/www/cgi-bin')
i = 1
for f in glob.glob("*.xlsx"):
    print("(" + str(i) + "). "  + str(f))
    i+= 1

print("\n")

print("Content-Type: text/html") # HTTP header to say HTML is following
print()                          # blank line, end of headers

form = cgi.FieldStorage()
wb_name  = html.escape(form["wb_name"].value);
u_sheet  = html.escape(form["u_sheet"].value);
b_sheet  = html.escape(form["b_sheet"].value);


#print("Adicione o nome da planilha em a extensao:")
#wb_name = input()
print("\n")
print(wb_name)
print(b_sheet)
print(u_sheet)
time.sleep(1)
try:
    workBook = openpyxl.load_workbook(wb_name + str(".xlsx"))
except IOError:
    print("arquivo nao encontrado")
    sys.exit()
print("Eu encontrei as seguintes abas na planilha")
print("\n")
j = 1;
for sheets in workBook.sheetnames:
    print("(" + str(j) + "). "  + str(sheets))
    j += 1
print("\n")
print("Informe o nome da primeira aba")
#b_sheet = aba1
print("\n")
try:
    bankSheet = workBook.get_sheet_by_name(b_sheet)
except KeyError:
    print("Nao encontrei abas nesta planilha " + wb_name + " xlsx.")
    print("exitting....")
    sys.exit()

print("Sucesso, dados encontrados " + b_sheet)
print("\n")
print("Informe o nome da outra aba")
#u_sheet = abai2
try:
    userSheet = workBook.get_sheet_by_name(u_sheet)
    print("\n")
    print("Sucesso, dados encontrados nesta aba: " + u_sheet)
    print("\n")
except KeyError:
    print("Nao encontrei dados nesta aba " + wb_name + " xlsx.")
    sys.exit()

#loop through all records in Column B of the excel file and convert them
#into an array. return that array
def get_data(sheetName):
    data = []
    for row in range(2, sheetName.max_row + 1):
        cellObj = sheetName["A" + (row)]
        eachChq = cellObj.value
        data.append(eachChq)
    return data

def get_chqs(sheetName):
    chqs = []
    for row in range(2, sheetName.max_row + 1):
        cellObj = sheetName["B" + str(row)]
        eachChq = cellObj.value
        chqs.append(eachChq)
    return chqs

def get_amount(sheetName):
    amount = []
    for row in range(2, sheetName.max_row + 1):
        cellObj = sheetName["C" + str(row)]
        eachAmu = cellObj.value
        amount.append(eachAmu)
    return amount

cheques = get_chqs(bankSheet)
amounts = get_amount(bankSheet)
data = get_data(bankSheet)

print("Numero de verificacoes encontrados " + str(len(cheques)))
print("Quantidades encontradas " + str(len(amounts)))
print("\n")

print("Processando ...")
time.sleep(2)
print("Conciliando ...")
time.sleep(2)
count = 0   #keep track of matches found
for row in range(2, userSheet.max_row + 1):
    ChcellObject = userSheet["B" + str(row)]        #get cell Object for every record found on column B of excel sheet
    AmcellObject = userSheet["C" + str(row)]
    datacellObject = userSheet["A" + str(row)]
        #same as above for every record on column C of the excel file

    if ChcellObject.value in cheques:               #check for matches in the "cheque" column
        if AmcellObject.value in amounts:           #check  for matches in the "amount" column
            AmcellObject.style = highlight          # highlight them all :)
            ChcellObject.style = highlight 
            datacellObject.style = highlight
         # --do--
            count += 1
print(str(count) + " encontrado")
print("\n")
print("aguarde ...")
time.sleep(1)
print("formatando in process...")
time.sleep(2)
print("SUCCESS:" + str(count) + " concialiacao formatada")
time.sleep(1)
print("Criando novo arquivo")
time.sleep(1)
workBook.save("conciliacao.xlsx")             # create new file with all the matched instance highlighted automatically
print("concialiacao.xlsx criada")
time.sleep(2)
print("Exiting...")

      



